searchState.loadedDescShard("canopy_widgets", 0, "A single input line, one character high.\nPanes manages a set of child nodes arranged in a 2d grid.\nDelete the focus node. If a column ends up empty, it is …\nGet the offset of the current focus in the children vector.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInsert a node in a new column. If we have a focused node, …\nInsert a node, splitting vertically. If we have a focused …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd a fixed width, ignoring fit parameters\nA characgter position. Offset 0 is the first character in …\nA simple editor\nAn insert position. The offset 0 is before the first …\nA position that can be clamped within the bounds of a <code>State</code>…\nA window of wrapped lines, represented as a line offset …\nAdjust the window to include the cursor.\nThe offset of the chunk in the editor state.\nThe offset of the chunk in the editor state.\nRetrieve the chunk and offset of the cursor.\nConstrain within state bounds, and return a new item\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this cursor between wrapped lines?\nCreate a new item and clamp it\nCreate a new InsertPos and constrain it within the state.\nCreate a new CharPos and constrain it within the state.\nThe column offset within the chunk.\nThe column offset within the chunk.\nShift the cursor by an offset within a chunk. If the new …\nShift the cursor by an offset within a chunk. If the new …\nShift the chunk offset. If the new position is out of …\nShift the chunk offset. If the new position is out of …\nThe editor Core exposes the operations that can be …\nMove the cursor within the current chunk, moving to the …\nMove the up or down in the chunk list.\nMove the up or down along wrapped lines.\nDelete text in a given range.\nReturns the argument unchanged.\nInsert text at the current cursor position.\nCalls <code>U::from(self)</code>.\nRedo an operation. Returne true if an operation was …\nUndo an operation. Return true if an operation was undone, …\nDouble line Unicode box drawing frame set\nA frame around an element.\nDefines the set of glyphs used to draw the frame\nSingle line thin Unicode box drawing frame set\nSingle line thick Unicode box drawing frame set\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild a frame with a specified glyph set\nBuild a frame with a specified title\nManage and display a list of items.\nListItem must be implemented by items displayed in a <code>List</code>.\nAppend an item to the end of the list.\nClear all items.\nMove selection to the next item in the list, if possible.\nDelete the currently selected item.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInsert an item at the given index.\nInsert an item after the current selection.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of items in the list.\nThe number of items in the list.\nScroll the viewport down by one page.\nScroll the viewport up by one page.\nScroll the viewport down by one line.\nScroll the viewport left by one column.\nScroll the viewport right by one column.\nScroll the viewport up by one line.\nSelect an item at a specified offset, clamping the offset …\nMove selection to the next item in the list, if possible.\nMove selection to the next item in the list, if possible.\nMove selection to the next item in the list, if possible.\nMove selection to the next previous the list, if possible.\nThe current selected item, if any\nA tab control managing a set of nodes with titles.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSelect the next tab.\nSelect the previous tab.")